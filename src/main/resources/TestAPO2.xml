<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 使用注解时要开启注解扫描 要扫描的包 -->
    <context:component-scan base-package="com.company.Spring.TestAOP2"/>
    <!-- 开启aop注解方式 -->
    <aop:aspectj-autoproxy/>

    <!--http://www.cnblogs.com/guzhou-ing/p/6445159.html-->
    <!--使用下面xml配置后，类中注解全部去掉，代码不变-->
    <!-- dao 实例   在这里配置后就不用在类中使用注解 -->
    <bean id="userDao" class="com.company.Spring.TestAOP2.UserDao"/>
    <bean id="orderDao" class="com.company.Spring.TestAOP2.OrderDao"/>

    <!-- 切面类 -->
    <bean id="aop" class="com.company.Spring.TestAOP2.AOP"/>

    <!-- Aop配置 -->
    <aop:config>
        <!-- 定义一个切入点表达式： 拦截哪些方法 -->
        <aop:pointcut id="pt" expression="execution(* com.company.Spring.TestAOP2.*.*(..))"/>
        <!-- 切面 -->
        <aop:aspect ref="aop">
            <!-- 环绕通知 -->
            <aop:around method="around" pointcut-ref="pt"/>
            <!-- 前置通知： 在目标方法调用前执行 -->
            <aop:before method="begin" pointcut-ref="pt"/>
            <!-- 后置通知： -->
            <aop:after method="after" pointcut-ref="pt"/>
            <!-- 返回后通知 -->
            <aop:after-returning method="afterReturning" pointcut-ref="pt"/>
            <!-- 异常通知 -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pt"/>
        </aop:aspect>
    </aop:config>
</beans>